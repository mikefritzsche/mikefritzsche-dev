version: 2.1

executors:
  node-executor:
    docker:
      - image: cimg/node:18.17

jobs:
  build:
    executor: node-executor
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
      - run:
          name: Build Docker image
          command: |
            SHORT_SHA=$(echo "${CIRCLE_SHA1}" | cut -c1-8)
            echo "SHORT_SHA=${SHORT_SHA}" >> build.env
            echo "Docker Image: ${DOCKER_USERNAME}/mikefritzsche-dev:${SHORT_SHA}"
            docker build -t ${DOCKER_USERNAME}/mikefritzsche-dev:${SHORT_SHA} .
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
            docker push ${DOCKER_USERNAME}/mikefritzsche-dev:${SHORT_SHA}
      - persist_to_workspace:
          root: .
          paths:
            - build.env  # Persist the environment variable to the workspace

  deploy:
    executor: node-executor
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Deploy to DigitalOcean
          command: |
            source build.env  # Load the SHORT_SHA variable
            TIMESTAMP=$(date "+%Y-%m-%d %H:%M:%S")
            ssh -o StrictHostKeyChecking=no $DO_SSH_USER@$DO_MIKE_SERVER_IP "
              docker pull ${DOCKER_USERNAME}/mikefritzsche-dev:${SHORT_SHA} &&
              docker stop mikefritzsche-dev-react-app || true &&
              docker rm mikefritzsche-dev-react-app || true &&
              docker run -d --name mikefritzsche-dev-react-app \
                --label traefik.enable=true \
                --label traefik.http.routers.prod-mikefritzsche-react-app.rule=Host\\(\\\`dev.mikefritzsche.com\\\`\\) \
                --label traefik.http.routers.prod-mikefritzsche-react-app.entrypoints=websecure \
                --label traefik.http.services.prod-mikefritzsche-react-app.loadbalancer.server.port=80 \
                --network proxy \
                ${DOCKER_USERNAME}/mikefritzsche-dev:${SHORT_SHA} \
              && echo '[${TIMESTAMP}] Deployed image with SHA: ${SHORT_SHA}' >> /home/mikefritzsche/app/main-dev/deployment-log.txt
            "
      - run:
          name: Create GitHub Deployment
          command: |
            source build.env
            DEPLOYMENT_ID=$(curl -X POST -H "Authorization: token ${GITHUB_TOKEN}" \
              -d @- https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/deployments <<EOF | jq -r .id
            {
              "ref": "${CIRCLE_SHA1}",
              "task": "deploy",
              "auto_merge": false,
              "required_contexts": [],
              "environment": "production",
              "description": "Deployment of ${SHORT_SHA} to production",
              "transient_environment": false,
              "production_environment": true
            }
            EOF
            )
            echo "Created GitHub Deployment with ID: ${DEPLOYMENT_ID}"

      - run:
          name: Mark Deployment as Successful
          command: |
            curl -X POST -H "Authorization: token ${GITHUB_TOKEN}" \
              -d @- https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/deployments/${DEPLOYMENT_ID}/statuses <<EOF
            {
              "state": "success",
              "description": "Deployment of ${SHORT_SHA} completed successfully.",
              "environment": "production"
            }
            EOF

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          context: do-secrets
      - deploy:
          context: do-secrets
          requires:
            - build
